"use strict";(self.webpackChunkrehowl=self.webpackChunkrehowl||[]).push([[319],{"./stories/Play.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basicSprite:()=>basicSprite,complexSprite:()=>complexSprite,default:()=>Play_stories,errorBadSRC:()=>errorBadSRC,fade:()=>fade,howlDefaultVolume:()=>howlDefaultVolume,mute:()=>mute,noPreload:()=>noPreload,pause:()=>pause,rate:()=>rate,renderPlay:()=>renderPlay,seekWithScrubberBar:()=>seekWithScrubberBar,stop:()=>stop,swapSource:()=>swapSource,volume:()=>volume});var react=__webpack_require__("./node_modules/react/index.js"),useHowl=__webpack_require__("./src/useHowl.ts"),Play=__webpack_require__("./src/Play.tsx"),chunk_AY7I2SME=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs"),sound1=__webpack_require__("./stories/static/audio/sound1.mp3");const sound2_namespaceObject=__webpack_require__.p+"static/media/sound2.a3c4ec16.mp3",static_audio_sound2_namespaceObject=__webpack_require__.p+"static/media/sound2.99003ab6.webm";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},useState=react.useState,useEffect=react.useEffect,useRef=react.useRef;const Play_stories={title:"Components/Play",component:Play.s,tags:["autodocs"]};var PlayPauseButton=function(_a){var play=_a.play,setPlay=_a.setPlay;return react.createElement("p",null,react.createElement("button",{onClick:function(){return setPlay(!play)}},play?"Pause ⏸":"Play ▶"))},renderPlay=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"Sound stops when the Play component is unmounted."),react.createElement("p",null,"State: ",state),react.createElement(PlayPauseButton,{play,setPlay}),play?react.createElement(Play.s,{howl},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"This is the child of the play component! Playing: ",playing().toString())})):null)},noPreload=function(){var _a=(0,useHowl.$)({src:sound1,preload:!1}),howl=_a.howl,state=_a.state,load=_a.load,_b=(_a.error,useState(!1)),play=_b[0],setPlay=_b[1];return useEffect((function(){(0,chunk_AY7I2SME.aD)(state)()}),[state]),react.createElement(react.Fragment,null,react.createElement("p",null,"The Play component will not be able to do anything until you call load."),react.createElement("p",null,"State: ",state),"unloaded"===state&&react.createElement("button",{onClick:function(){return load()}},"Load"),react.createElement(PlayPauseButton,{play,setPlay}),play&&react.createElement(Play.s,{howl,onPlayError:(0,chunk_AY7I2SME.aD)("onPlayError")},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))},stop=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"This component is being stopped with the ",react.createElement("code",null,"stop")," prop."),react.createElement("p",null,"State: ",state),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement(Play.s,{howl,stop:!play,onStop:(0,chunk_AY7I2SME.aD)("onStop"),onPlay:(0,chunk_AY7I2SME.aD)("onPlay")},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))},rate=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1],_c=useState(2),rate=_c[0],setRate=_c[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"Control the rate of playback."),react.createElement("p",null,"State: ",state),react.createElement("p",null,"Rate: ",100*rate,"%"),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement("p",null,react.createElement("button",{onClick:function(){return setRate((function(rate){return Math.max(rate-.5,.5)}))},disabled:rate<=.5},"-0.5"),react.createElement("button",{onClick:function(){return setRate((function(rate){return Math.min(rate+.5,4)}))},disabled:rate>=4},"+0.5")),react.createElement(Play.s,{howl,rate,onRate:(0,chunk_AY7I2SME.aD)("onRate"),pause:!play},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))},pause=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"Control playback with the ",react.createElement("code",null,"pause")," prop."),react.createElement("p",null,"State: ",state),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement(Play.s,{howl,pause:!play,onPlay:(0,chunk_AY7I2SME.aD)("onPlay"),onPause:(0,chunk_AY7I2SME.aD)("onPause")},(function(_a){var playing=_a.playing;return react.createElement("p",null,"Playing: ",playing().toString())})))},volume=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1],_c=useState(.5),volume=_c[0],setVolume=_c[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"Set the volume. The Play element can change before and during playback."),react.createElement("p",null,"State: ",state),react.createElement("div",null,react.createElement("label",{htmlFor:"volume"},"Volume:"),react.createElement("input",{id:"volume",type:"range",min:0,max:1,step:.05,value:volume,onChange:function(event){return setVolume(parseFloat(event.target.value))}})),react.createElement(PlayPauseButton,{play,setPlay}),play&&react.createElement(Play.s,{howl,volume,onVolume:(0,chunk_AY7I2SME.aD)("onVolume")},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))},mute=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1],_c=useState(!0),mute=_c[0],setMute=_c[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"State: ",state),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement("p",null,mute?"Muted.":"Unmuted."," ",react.createElement("button",{onClick:function(){return setMute(!mute)}},mute?"Unmute 🔊":"Mute 🔇")),play&&react.createElement(Play.s,{howl,mute,onPlay:(0,chunk_AY7I2SME.aD)("onPlay"),onMute:(0,chunk_AY7I2SME.aD)("onMute")},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))},fade=function(){var _a=(0,useHowl.$)({src:sound1}),howl=_a.howl,state=_a.state,_b=useState(!1),play=_b[0],setPlay=_b[1],_c=useState(void 0),silent=_c[0],setSilent=_c[1],_d=useState(!1),fading=_d[0],setFading=_d[1],setTime=useState(0)[1],requestRef=useRef(null),previousTimeRef=useRef(0),animate=function(time){if(void 0!==previousTimeRef.current){var deltaTime=time-previousTimeRef.current;setTime(deltaTime)}previousTimeRef.current=time,requestRef.current=requestAnimationFrame(animate)};return useEffect((function(){if(fading)return requestRef.current=requestAnimationFrame(animate),function(){requestRef.current&&cancelAnimationFrame(requestRef.current)};requestRef.current&&cancelAnimationFrame(requestRef.current)}),[fading]),react.createElement(react.Fragment,null,react.createElement("p",null,"State: ",state),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement(react.Fragment,null,react.createElement("button",{disabled:fading,onClick:function(){setFading(!0),setSilent(!silent)}},fading?silent?"Fading out...":"Fading in...":silent?"Fade in!":"Fade out!"),react.createElement(Play.s,{howl,pause:!play,fade:void 0===silent?void 0:silent?[1,0,2e3]:[0,1,2e3],onFade:function(){return setFading(!1)}},(function(_a){var volume=_a.volume;return react.createElement("p",null,"Volume is at ",(100*volume()).toFixed(0),"%")}))))},seekWithScrubberBar=function(){var howl=(0,useHowl.$)({src:sound1}).howl,_a=useState(0),targetSeek=_a[0],setTargetSeek=_a[1],_b=useState(!1),play=_b[0],setPlay=_b[1],_c=useState(!1),scrubbing=_c[0],setScrubbing=_c[1],_d=useState(!0),pauseDuringScrub=_d[0],setPauseDuringScrub=_d[1],setTime=useState(0)[1],requestRef=useRef(null),previousTimeRef=useRef(0),animate=function(time){if(void 0!==previousTimeRef.current){var deltaTime=time-previousTimeRef.current;setTime(deltaTime)}previousTimeRef.current=time,requestRef.current=requestAnimationFrame(animate)};return useEffect((function(){if(play)return requestRef.current=requestAnimationFrame(animate),function(){requestRef.current&&cancelAnimationFrame(requestRef.current)}}),[play]),react.createElement(react.Fragment,null,react.createElement("div",null,react.createElement("input",{type:"checkbox",checked:pauseDuringScrub,onChange:function(event){return setPauseDuringScrub(event.target.checked)},id:"pause-during-scrub"}),react.createElement("label",{htmlFor:"pause-during-scrub"},"Pause while scrubbing")),react.createElement(PlayPauseButton,{play,setPlay}),react.createElement(Play.s,{howl,seek:targetSeek,pause:!play||pauseDuringScrub&&scrubbing,onEnd:function(){return setPlay(!0)},onSeek:(0,chunk_AY7I2SME.aD)("onSeek")},(function(_a){var seek=_a.seek,duration=_a.duration,position=scrubbing&&void 0!==targetSeek?targetSeek:seek(),length=duration();return react.createElement("div",null,react.createElement("p",null,position.toFixed(1)," / ",length.toFixed(1)),react.createElement("input",{type:"range",min:0,max:length,value:position,step:.1,onChange:function(e){var changedPosition=parseFloat(e.target.value);setTargetSeek(changedPosition)},onMouseDown:function(){return setTimeout((function(){return setScrubbing(!0)}),0)},onMouseUp:function(){return setTimeout((function(){return setScrubbing(!1)}),0)}}))})))},basicSprite=function(){var _a=useState(0),digit=_a[0],setDigit=_a[1],_b=useState(!1),loop=_b[0],setLoop=_b[1],_c=(0,useHowl.$)({src:[static_audio_sound2_namespaceObject,sound2_namespaceObject],sprite:{1:[0,450],2:[2e3,250],3:[4e3,350],4:[6e3,380],5:[8e3,340]}}),howl=_c.howl,state=_c.state;return react.createElement(react.Fragment,null,react.createElement("p",null,"All these digits are loaded from a single sound file and are controlled by one Howl. The Play component will automatically start playing when the selected sprite changes."),react.createElement("p",null,"Selected digit: ",digit),react.createElement("p",null,"State: ",state),react.createElement("div",null,[1,2,3,4,5].map((function(digit){return react.createElement("button",{key:digit,onClick:function(){setDigit(digit)}},digit)}))),react.createElement("button",{onClick:function(){return setLoop(!loop)}},loop?"Disable Looping":"Enable Looping"),digit>0?react.createElement(Play.s,{howl,sprite:"".concat(digit),loop}):null)},complexSprite=function(){var _a=useState([]),digits=_a[0],setDigits=_a[1],_b=useState(!1),playBeat=_b[0],setPlayBeat=_b[1],_c=(0,useHowl.$)({src:[static_audio_sound2_namespaceObject,sound2_namespaceObject],sprite:{1:[0,450],2:[2e3,250],3:[4e3,350],4:[6e3,380],5:[8e3,340],beat:[1e4,11163]}}),howl=_c.howl,state=_c.state;return react.createElement(react.Fragment,null,react.createElement("p",null,"All these sounds are loaded from a single sound file on one Howl."),react.createElement("p",null,"Every time you click a digit, a Play is rendered and played until onEnd is called."),react.createElement("p",null,"Go ahead, play a few sounds at once."),react.createElement("p",null,"State: ",state),react.createElement("div",null,[1,2,3,4,5].map((function(digit){return react.createElement("button",{key:digit,onClick:function(){setDigits((function(digits){return __spreadArray(__spreadArray([],digits,!0),[{digit,time:Date.now()}],!1)}))}},digit)}))),react.createElement("button",{onClick:function(){return setPlayBeat(!playBeat)}},playBeat?"Pause Beat":"Play Beat"),react.createElement("button",{onClick:function(){var now=Date.now();setDigits((function(digits){return __spreadArray(__spreadArray([],digits,!0),[{digit:5,time:now},{digit:4,time:now+1},{digit:3,time:now+2},{digit:2,time:now+3},{digit:1,time:now+4}],!1)}))}},"Play all"),react.createElement("div",null,react.createElement(Play.s,{howl,sprite:"beat",loop:!0,pause:!playBeat},(function(_a){var playing=_a.playing;return react.createElement("p",null,"Beat Playing: ",playing().toString())})),digits.map((function(_a){var digit=_a.digit,time=_a.time;return react.createElement(Play.s,{howl,sprite:"".concat(digit),key:time,onEnd:function(){return setDigits((function(digits){var targetIndex=digits.findIndex((function(x){return x.time===time}));return targetIndex<0?digits:__spreadArray(__spreadArray([],digits.slice(0,targetIndex),!0),digits.slice(targetIndex+1),!0)}))}},(function(_a){var duration=_a.duration;return react.createElement("p",null,"Playing ",digit," for ",duration())}))}))))},errorBadSRC=function(){var _a=(0,useHowl.$)({src:"fake"}),howl=_a.howl,state=_a.state,error=_a.error;return react.createElement(react.Fragment,null,error&&react.createElement("p",null,"Error: ",[error.id,error.message].filter((function(x){return x})).join(" ")," "),react.createElement("p",null,"State: ",state),react.createElement(Play.s,{howl}))},howlDefaultVolume=function(){var _a=useState(0),defaultVolume=_a[0],setDefaultVolume=_a[1],_b=useState(0),playVolume=_b[0],setPlayVolume=_b[1],howl=(0,useHowl.$)({src:sound1,defaultVolume}).howl,_c=useState(!1),play=_c[0],setPlay=_c[1];return react.createElement(react.Fragment,null,react.createElement("p",null,"Default volume on the howl is 0 to prevent clipping on quiet plays. This example is used for debug on slower devices such as phones."),react.createElement("div",null,react.createElement("label",null,react.createElement("input",{type:"radio",name:"default-volume",checked:0===defaultVolume,value:0,onChange:function(event){event.target.checked&&setDefaultVolume(0)}})," Default volume 0"),react.createElement("label",null,react.createElement("input",{type:"radio",name:"default-volume",checked:1===defaultVolume,value:1,onChange:function(event){event.target.checked&&setDefaultVolume(1)}})," Default volume 1")),react.createElement("div",null,react.createElement("label",null,react.createElement("input",{type:"radio",name:"play-volume",checked:0===playVolume,value:0,onChange:function(event){event.target.checked&&setPlayVolume(0)}})," Play volume 0"),react.createElement("label",null,react.createElement("input",{type:"radio",name:"play-volume",checked:1===playVolume,value:1,onChange:function(event){event.target.checked&&setPlayVolume(1)}})," Play volume 1")),react.createElement(PlayPauseButton,{play,setPlay}),play&&react.createElement(Play.s,{howl,volume:playVolume,seek:.5}))},swapSource=function(){var srcs=["nonexistent.mp3",sound1,sound2_namespaceObject],_a=useState(!1),useHtml5=_a[0],setUseHtml5=_a[1],_b=useState(srcs[0]),src=_b[0],setSrc=_b[1],_c=(0,useHowl.$)({src,html5:useHtml5}),howl=_c.howl,state=_c.state,error=_c.error;return react.createElement(react.Fragment,null,react.createElement("p",null,"Every time a setting is changed on useHowl or Rehowl, the howl instance is reconstructed."),react.createElement("p",null,"It's better to load multiple howls and use Play components than swap the source on a single howl."),react.createElement("p",null,"In this example, you can change the howl's src and whether it's using HTML5 Audio or Web Audio."),react.createElement("p",null,react.createElement("strong",null,"Select a sound to play")),srcs.map((function(srcChoice){return react.createElement("div",{key:srcChoice},react.createElement("label",null,react.createElement("input",{type:"radio",name:"source",checked:srcChoice===src,value:srcChoice,onChange:function(event){event.target.checked&&setSrc(srcChoice)}})," ",srcChoice))})),react.createElement("label",{style:{display:"block",marginTop:"1rem"}},react.createElement("input",{type:"checkbox",checked:useHtml5,onChange:function(event){return setUseHtml5(event.target.checked)},id:"html5"}),"Use HTML 5 Audio"),react.createElement("p",null,react.createElement("strong",null,"Info")),error&&react.createElement("p",null,"Error: ",[error.id,error.message].filter((function(x){return x})).join(" ")," "),react.createElement("p",null,"State: ",state),react.createElement(Play.s,{howl},(function(_a){var playing=_a.playing;return react.createElement(react.Fragment,null,"Playing: ",playing().toString())})))};renderPlay.parameters=__assign(__assign({},renderPlay.parameters),{docs:__assign(__assign({},null===(_a=renderPlay.parameters)||void 0===_a?void 0:_a.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  return <>\n      <p>Sound stops when the Play component is unmounted.</p>\n      <p>State: {state}</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      {play ? <Play howl={howl}>\n          {({\n        playing\n      }) => <>This is the child of the play component! Playing: {playing().toString()}</>}\n        </Play> : null}\n    </>;\n}"},null===(_c=null===(_b=renderPlay.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),noPreload.parameters=__assign(__assign({},noPreload.parameters),{docs:__assign(__assign({},null===(_d=noPreload.parameters)||void 0===_d?void 0:_d.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state,\n    load,\n    error\n  } = useHowl({\n    src: sound1,\n    preload: false\n  });\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    action(state)();\n  }, [state]);\n  return <>\n      <p>The Play component will not be able to do anything until you call load.</p>\n      <p>State: {state}</p>\n      {state === 'unloaded' && <button onClick={() => load()}>Load</button>}\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      {play && <Play howl={howl} onPlayError={action('onPlayError')}>\n          {({\n        playing\n      }) => <>Playing: {playing().toString()}</>}\n        </Play>}\n    </>;\n}"},null===(_f=null===(_e=noPreload.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),stop.parameters=__assign(__assign({},stop.parameters),{docs:__assign(__assign({},null===(_g=stop.parameters)||void 0===_g?void 0:_g.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  return <>\n      <p>\n        This component is being stopped with the <code>stop</code> prop.\n      </p>\n      <p>State: {state}</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <Play howl={howl} stop={!play} onStop={action('onStop')} onPlay={action('onPlay')}>\n        {({\n        playing\n      }) => <>Playing: {playing().toString()}</>}\n      </Play>\n    </>;\n}"},null===(_j=null===(_h=stop.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),rate.parameters=__assign(__assign({},rate.parameters),{docs:__assign(__assign({},null===(_k=rate.parameters)||void 0===_k?void 0:_k.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  const [rate, setRate] = useState(2);\n  const decreaseRate = () => setRate(rate => Math.max(rate - 0.5, 0.5));\n  const increaseRate = () => setRate(rate => Math.min(rate + 0.5, 4));\n  return <>\n      <p>Control the rate of playback.</p>\n      <p>State: {state}</p>\n      <p>Rate: {rate * 100}%</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <p>\n        <button onClick={decreaseRate} disabled={rate <= 0.5}>\n          -0.5\n        </button>\n        <button onClick={increaseRate} disabled={rate >= 4}>\n          +0.5\n        </button>\n      </p>\n      <Play howl={howl} rate={rate} onRate={action('onRate')} pause={!play}>\n        {({\n        playing\n      }) => <>Playing: {playing().toString()}</>}\n      </Play>\n    </>;\n}"},null===(_m=null===(_l=rate.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),pause.parameters=__assign(__assign({},pause.parameters),{docs:__assign(__assign({},null===(_o=pause.parameters)||void 0===_o?void 0:_o.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  return <>\n      <p>\n        Control playback with the <code>pause</code> prop.\n      </p>\n      <p>State: {state}</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <Play howl={howl} pause={!play} onPlay={action('onPlay')} onPause={action('onPause')}>\n        {({\n        playing\n      }) => <p>Playing: {playing().toString()}</p>}\n      </Play>\n    </>;\n}"},null===(_q=null===(_p=pause.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),volume.parameters=__assign(__assign({},volume.parameters),{docs:__assign(__assign({},null===(_r=volume.parameters)||void 0===_r?void 0:_r.docs),{source:__assign({originalSource:'() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n  return <>\n      <p>Set the volume. The Play element can change before and during playback.</p>\n      <p>State: {state}</p>\n      <div>\n        <label htmlFor="volume">Volume:</label>\n        <input id="volume" type="range" min={0} max={1} step={0.05} value={volume} onChange={event => setVolume(parseFloat(event.target.value))} />\n      </div>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      {play && <Play howl={howl} volume={volume} onVolume={action(\'onVolume\')}>\n          {({\n        playing\n      }) => <>Playing: {playing().toString()}</>}\n        </Play>}\n    </>;\n}'},null===(_t=null===(_s=volume.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),mute.parameters=__assign(__assign({},mute.parameters),{docs:__assign(__assign({},null===(_u=mute.parameters)||void 0===_u?void 0:_u.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  const [mute, setMute] = useState(true);\n  return <>\n      <p>State: {state}</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <p>\n        {mute ? 'Muted.' : 'Unmuted.'} <button onClick={() => setMute(!mute)}>{mute ? 'Unmute 🔊' : 'Mute 🔇'}</button>\n      </p>\n      {play && <Play howl={howl} mute={mute} onPlay={action('onPlay')} onMute={action('onMute')}>\n          {({\n        playing\n      }) => <>Playing: {playing().toString()}</>}\n        </Play>}\n    </>;\n}"},null===(_w=null===(_v=mute.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),fade.parameters=__assign(__assign({},fade.parameters),{docs:__assign(__assign({},null===(_x=fade.parameters)||void 0===_x?void 0:_x.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: sound1\n  });\n  const [play, setPlay] = useState(false);\n  const [silent, setSilent] = useState<undefined | boolean>(undefined);\n  const [fading, setFading] = useState(false);\n\n  // Request animation frames during fade.\n  const [, setTime] = useState(0);\n  const requestRef = useRef<number | null>(null);\n  const previousTimeRef = useRef(0);\n  const animate = (time: number) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      setTime(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    if (!fading) {\n      if (requestRef.current) cancelAnimationFrame(requestRef.current);\n      return;\n    }\n    requestRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    };\n  }, [fading]);\n  return <>\n      <p>State: {state}</p>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <>\n        <button disabled={fading} onClick={() => {\n        setFading(true);\n        setSilent(!silent);\n      }}>\n          {fading ? silent ? 'Fading out...' : 'Fading in...' : silent ? 'Fade in!' : 'Fade out!'}\n        </button>\n        <Play howl={howl} pause={!play} fade={silent === undefined ? undefined : silent ? [1, 0, 2000] : [0, 1, 2000]} onFade={() => setFading(false)}>\n          {({\n          volume\n        }) => <p>Volume is at {(volume() * 100).toFixed(0)}%</p>}\n        </Play>\n      </>\n    </>;\n}"},null===(_z=null===(_y=fade.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})}),seekWithScrubberBar.parameters=__assign(__assign({},seekWithScrubberBar.parameters),{docs:__assign(__assign({},null===(_0=seekWithScrubberBar.parameters)||void 0===_0?void 0:_0.docs),{source:__assign({originalSource:'() => {\n  const {\n    howl\n  } = useHowl({\n    src: sound1\n  });\n  const [targetSeek, setTargetSeek] = useState(0);\n  const [play, setPlay] = useState(false);\n  const [scrubbing, setScrubbing] = useState(false);\n  const [pauseDuringScrub, setPauseDuringScrub] = useState(true);\n\n  // Request animation frames in order to render seek smoothly.\n  const [, setTime] = useState(0);\n  const requestRef = useRef<number | null>(null);\n  const previousTimeRef = useRef(0);\n  const animate = (time: number) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      setTime(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n  useEffect(() => {\n    if (!play) return;\n    requestRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    };\n  }, [play]);\n  return <>\n      <div>\n        <input type="checkbox" checked={pauseDuringScrub} onChange={event => setPauseDuringScrub(event.target.checked)} id="pause-during-scrub" />\n        <label htmlFor="pause-during-scrub">Pause while scrubbing</label>\n      </div>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n      <Play howl={howl} seek={targetSeek} pause={!play || pauseDuringScrub && scrubbing} onEnd={() => setPlay(true)} onSeek={action(\'onSeek\')}>\n        {({\n        seek,\n        duration\n      }) => {\n        const position = scrubbing && targetSeek !== undefined ? targetSeek : seek();\n        const length = duration();\n        return <div>\n              <p>\n                {position.toFixed(1)} / {length.toFixed(1)}\n              </p>\n              <input type="range" min={0} max={length} value={position} step={0.1} onChange={e => {\n            const changedPosition = parseFloat(e.target.value);\n            // Remove false positives caused by slow seek() update time.\n            setTargetSeek(changedPosition);\n          }} onMouseDown={() => setTimeout(() => setScrubbing(true), 0)} onMouseUp={() => setTimeout(() => setScrubbing(false), 0)} />\n            </div>;\n      }}\n      </Play>\n    </>;\n}'},null===(_2=null===(_1=seekWithScrubberBar.parameters)||void 0===_1?void 0:_1.docs)||void 0===_2?void 0:_2.source)})}),basicSprite.parameters=__assign(__assign({},basicSprite.parameters),{docs:__assign(__assign({},null===(_3=basicSprite.parameters)||void 0===_3?void 0:_3.docs),{source:__assign({originalSource:"() => {\n  const [digit, setDigit] = useState(0);\n  const [loop, setLoop] = useState(false);\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: [sound2web, sound2mp3],\n    sprite: {\n      1: [0, 450],\n      2: [2000, 250],\n      3: [4000, 350],\n      4: [6000, 380],\n      5: [8000, 340]\n    }\n  });\n  return <>\n      <p>\n        All these digits are loaded from a single sound file and are controlled by one Howl. The Play component will\n        automatically start playing when the selected sprite changes.\n      </p>\n      <p>Selected digit: {digit}</p>\n      <p>State: {state}</p>\n      <div>\n        {[1, 2, 3, 4, 5].map(digit => <button key={digit} onClick={() => {\n        setDigit(digit);\n      }}>\n            {digit}\n          </button>)}\n      </div>\n      <button onClick={() => setLoop(!loop)}>{loop ? 'Disable Looping' : 'Enable Looping'}</button>\n      {digit > 0 ? <Play howl={howl} sprite={`${digit}`} loop={loop} /> : null}\n    </>;\n}"},null===(_5=null===(_4=basicSprite.parameters)||void 0===_4?void 0:_4.docs)||void 0===_5?void 0:_5.source)})}),complexSprite.parameters=__assign(__assign({},complexSprite.parameters),{docs:__assign(__assign({},null===(_6=complexSprite.parameters)||void 0===_6?void 0:_6.docs),{source:__assign({originalSource:"() => {\n  const [digits, setDigits] = useState<Digits>([]);\n  const [playBeat, setPlayBeat] = useState(false);\n  const {\n    howl,\n    state\n  } = useHowl({\n    src: [sound2web, sound2mp3],\n    sprite: {\n      1: [0, 450],\n      2: [2000, 250],\n      3: [4000, 350],\n      4: [6000, 380],\n      5: [8000, 340],\n      beat: [10000, 11163]\n    }\n  });\n  return <>\n      <p>All these sounds are loaded from a single sound file on one Howl.</p>\n      <p>Every time you click a digit, a Play is rendered and played until onEnd is called.</p>\n      <p>Go ahead, play a few sounds at once.</p>\n      <p>State: {state}</p>\n      <div>\n        {[1, 2, 3, 4, 5].map(digit => <button key={digit} onClick={() => {\n        setDigits(digits => [...digits, {\n          digit,\n          time: Date.now()\n        }]);\n      }}>\n            {digit}\n          </button>)}\n      </div>\n      <button onClick={() => setPlayBeat(!playBeat)}>{playBeat ? 'Pause Beat' : 'Play Beat'}</button>\n      <button onClick={() => {\n      const now = Date.now();\n      setDigits(digits => [...digits, {\n        digit: 5,\n        time: now\n      }, {\n        digit: 4,\n        time: now + 1\n      }, {\n        digit: 3,\n        time: now + 2\n      }, {\n        digit: 2,\n        time: now + 3\n      }, {\n        digit: 1,\n        time: now + 4\n      }]);\n    }}>\n        Play all\n      </button>\n      <div>\n        <Play howl={howl} sprite=\"beat\" loop pause={!playBeat}>\n          {({\n          playing\n        }) => <p>Beat Playing: {playing().toString()}</p>}\n        </Play>\n        {digits.map(({\n        digit,\n        time\n      }) => <Play howl={howl} sprite={`${digit}`} key={time} onEnd={() => setDigits(digits => {\n        const targetIndex = digits.findIndex(x => x.time === time);\n        if (targetIndex < 0) return digits;\n        return [...digits.slice(0, targetIndex), ...digits.slice(targetIndex + 1)];\n      })}>\n            {({\n          duration\n        }) => <p>\n                Playing {digit} for {duration()}\n              </p>}\n          </Play>)}\n      </div>\n    </>;\n}"},null===(_8=null===(_7=complexSprite.parameters)||void 0===_7?void 0:_7.docs)||void 0===_8?void 0:_8.source)})}),errorBadSRC.parameters=__assign(__assign({},errorBadSRC.parameters),{docs:__assign(__assign({},null===(_9=errorBadSRC.parameters)||void 0===_9?void 0:_9.docs),{source:__assign({originalSource:"() => {\n  const {\n    howl,\n    state,\n    error\n  } = useHowl({\n    src: 'fake'\n  });\n  return <>\n      {error && <p>Error: {[error.id, error.message].filter(x => x).join(' ')} </p>}\n      <p>State: {state}</p>\n      <Play howl={howl} />\n    </>;\n}"},null===(_11=null===(_10=errorBadSRC.parameters)||void 0===_10?void 0:_10.docs)||void 0===_11?void 0:_11.source)})}),howlDefaultVolume.parameters=__assign(__assign({},howlDefaultVolume.parameters),{docs:__assign(__assign({},null===(_12=howlDefaultVolume.parameters)||void 0===_12?void 0:_12.docs),{source:__assign({originalSource:'() => {\n  const [defaultVolume, setDefaultVolume] = useState(0);\n  const [playVolume, setPlayVolume] = useState(0);\n  const {\n    howl\n  } = useHowl({\n    src: sound1,\n    defaultVolume\n  });\n  const [play, setPlay] = useState(false);\n  return <>\n      <p>\n        Default volume on the howl is 0 to prevent clipping on quiet plays. This example is used for debug on slower\n        devices such as phones.\n      </p>\n      <div>\n        <label>\n          <input type="radio" name="default-volume" checked={defaultVolume === 0} value={0} onChange={event => {\n          if (event.target.checked) {\n            setDefaultVolume(0);\n          }\n        }} />\n          &nbsp;Default volume 0\n        </label>\n        <label>\n          <input type="radio" name="default-volume" checked={defaultVolume === 1} value={1} onChange={event => {\n          if (event.target.checked) {\n            setDefaultVolume(1);\n          }\n        }} />\n          &nbsp;Default volume 1\n        </label>\n      </div>\n      <div>\n        <label>\n          <input type="radio" name="play-volume" checked={playVolume === 0} value={0} onChange={event => {\n          if (event.target.checked) {\n            setPlayVolume(0);\n          }\n        }} />\n          &nbsp;Play volume 0\n        </label>\n        <label>\n          <input type="radio" name="play-volume" checked={playVolume === 1} value={1} onChange={event => {\n          if (event.target.checked) {\n            setPlayVolume(1);\n          }\n        }} />\n          &nbsp;Play volume 1\n        </label>\n      </div>\n      <PlayPauseButton play={play} setPlay={setPlay} />\n\n      {play && <Play howl={howl} volume={playVolume} seek={0.5} />}\n    </>;\n}'},null===(_14=null===(_13=howlDefaultVolume.parameters)||void 0===_13?void 0:_13.docs)||void 0===_14?void 0:_14.source)})}),swapSource.parameters=__assign(__assign({},swapSource.parameters),{docs:__assign(__assign({},null===(_15=swapSource.parameters)||void 0===_15?void 0:_15.docs),{source:__assign({originalSource:"() => {\n  const srcs = ['nonexistent.mp3', sound1, sound2mp3];\n  const [useHtml5, setUseHtml5] = useState(false);\n  const [src, setSrc] = useState(srcs[0]);\n  const {\n    howl,\n    state,\n    error\n  } = useHowl({\n    src: src,\n    html5: useHtml5\n  });\n  return <>\n      <p>Every time a setting is changed on useHowl or Rehowl, the howl instance is reconstructed.</p>\n      <p>It's better to load multiple howls and use Play components than swap the source on a single howl.</p>\n      <p>In this example, you can change the howl's src and whether it's using HTML5 Audio or Web Audio.</p>\n      <p>\n        <strong>Select a sound to play</strong>\n      </p>\n      {srcs.map(srcChoice => <div key={srcChoice}>\n          <label>\n            <input type=\"radio\" name=\"source\" checked={srcChoice === src} value={srcChoice} onChange={event => {\n          if (event.target.checked) {\n            setSrc(srcChoice);\n          }\n        }} />\n            &nbsp;{srcChoice}\n          </label>\n        </div>)}\n      <label style={{\n      display: 'block',\n      marginTop: '1rem'\n    }}>\n        <input type=\"checkbox\" checked={useHtml5} onChange={event => setUseHtml5(event.target.checked)} id=\"html5\" />\n        Use HTML 5 Audio\n      </label>\n\n      <p>\n        <strong>Info</strong>\n      </p>\n      {error && <p>Error: {[error.id, error.message].filter(x => x).join(' ')} </p>}\n      <p>State: {state}</p>\n\n      <Play howl={howl}>{({\n        playing\n      }) => <>Playing: {playing().toString()}</>}</Play>\n    </>;\n}"},null===(_17=null===(_16=swapSource.parameters)||void 0===_16?void 0:_16.docs)||void 0===_17?void 0:_17.source)})});const __namedExportsOrder=["renderPlay","noPreload","stop","rate","pause","volume","mute","fade","seekWithScrubberBar","basicSprite","complexSprite","errorBadSRC","howlDefaultVolume","swapSource"]},"./src/Play.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>Play});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function Play(props){var howl=props.howl,pause=props.pause,sprite=props.sprite,mute=props.mute,_a=props.volume,volume=void 0===_a?1:_a,seek=props.seek,fade=props.fade,stop=props.stop,rate=props.rate,loop=props.loop,children=props.children,shouldPlay=!pause&&!stop,_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(shouldPlay),initialized=_b[0],setInitialized=_b[1],_c=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),playId=_c[0],setPlayId=_c[1],_d=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),playing=_d[0],setPlaying=_d[1],_e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),stopped=_e[0],setStopped=_e[1],_f=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),unlocked=_f[0],setUnlocked=_f[1],_g=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),seeking=_g[0],setSeeking=_g[1],onPlay=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onPlayError=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onEnd=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onPause=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onStop=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onMute=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onVolume=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onSeek=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onFade=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onRate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onPlay.current=props.onPlay||null}),[props.onPlay]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onPlayError.current=props.onPlayError||null}),[props.onPlayError]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onEnd.current=props.onEnd||null}),[props.onEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onPause.current=props.onPause||null}),[props.onPause]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onStop.current=props.onStop||null}),[props.onStop]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onMute.current=props.onMute||null}),[props.onMute]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onVolume.current=props.onVolume||null}),[props.onVolume]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onSeek.current=props.onSeek||null}),[props.onSeek]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onFade.current=props.onFade||null}),[props.onFade]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){onRate.current=props.onRate||null}),[props.onRate]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){initialized||shouldPlay&&setInitialized(!0)}),[initialized,shouldPlay]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){if(howl&&shouldPlay&&initialized){var currentPlayId=howl.play(sprite);return setPlayId(currentPlayId),howl.volume(volume,currentPlayId),void 0!==mute&&howl.mute(mute,currentPlayId),void 0!==rate&&howl.rate(rate,currentPlayId),howl.once("play",(function(id){id===currentPlayId&&setUnlocked(!0)})),howl.on("play",(function(id){id===currentPlayId&&onPlay.current&&onPlay.current()})),howl.on("playerror",(function(id){id===currentPlayId&&onPlayError.current&&onPlayError.current()})),howl.on("pause",(function(id){id===currentPlayId&&onPause.current&&onPause.current()})),howl.on("end",(function(id){id===currentPlayId&&onEnd.current&&onEnd.current()})),howl.on("stop",(function(id){id===currentPlayId&&onStop.current&&onStop.current()})),howl.on("mute",(function(id){id===currentPlayId&&onMute.current&&onMute.current()})),howl.on("volume",(function(id){id===currentPlayId&&onVolume.current&&onVolume.current()})),howl.on("rate",(function(id){id===currentPlayId&&onRate.current&&onRate.current()})),howl.on("seek",(function(id){id===currentPlayId&&(setSeeking(!1),onSeek.current&&onSeek.current())})),howl.on("fade",(function(id){id===currentPlayId&&onFade.current&&onFade.current()})),function(){howl.stop(currentPlayId),setInitialized(!1),setUnlocked(!1),howl.off("play",void 0,currentPlayId),howl.off("playerror",void 0,currentPlayId),howl.off("pause",void 0,currentPlayId),howl.off("end",void 0,currentPlayId),howl.off("stop",void 0,currentPlayId),howl.off("mute",void 0,currentPlayId),howl.off("volume",void 0,currentPlayId),howl.off("rate",void 0,currentPlayId),howl.off("seek",void 0,currentPlayId),howl.off("fade",void 0,currentPlayId),setPlayId(null)}}}),[initialized,howl,sprite]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&(stop?stopped||(howl.stop(playId),setStopped(!0),setPlaying(!1)):playing&&pause?(howl.pause(playId),setStopped(!1),setPlaying(!1)):playing||pause||(howl.play(playId),setStopped(!1),setPlaying(!0)))}),[howl,playId,stopped,unlocked,playing,pause,stop]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&void 0!==mute&&howl.mute(mute,playId)}),[howl,playId,unlocked,mute]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&void 0!==volume&&howl.volume(volume,playId)}),[howl,playId,unlocked,volume]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&void 0!==seek&&(setSeeking(!0),howl.seek(seek,playId))}),[howl,playId,unlocked,seek]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){if(howl&&playId&&unlocked&&fade){var from=fade[0],to=fade[1],duration=fade[2];howl.fade(from,to,duration,playId)}}),[howl,playId,unlocked,JSON.stringify(fade)]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&void 0!==rate&&howl.rate(rate,playId)}),[howl,playId,unlocked,rate]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){howl&&playId&&unlocked&&void 0!==loop&&howl.loop(loop,playId)}),[howl,playId,unlocked,loop]),children&&howl?children({duration:function(){return howl&&playId?sprite?howl.duration(playId):howl.duration():0},playing:function(){return!(!howl||!playId)&&howl.playing(playId)},seek:function(){if(!howl||!playId)return 0;if(seeking&&void 0!==seek)return seek;var position=howl.seek(playId);return"number"!=typeof position?0:position},volume:function(){if(!howl||!playId)return void 0===volume?1:volume;var currentVolume=howl.volume(playId);return"number"!=typeof currentVolume?0:currentVolume}}):null}try{Play.displayName="Play",Play.__docgenInfo={description:"Plays and controls sounds from a Howl.\n\nThe Howl instance, provided by the `howl` prop, can come from `useHowl`,\n`<Rehowl />`, or provided from your own use of howler.js\n\nYou can render **multiple `<Play />` components** for a single\nHowl instance in order to play multiple sounds or sprites at once.\n\nEvent handlers fire only for the `<Play />` that they correspond to,\nand not for every sound playing off of the Howl instance like in howler.js",displayName:"Play",props:{howl:{defaultValue:null,description:"Instance of Howl to play sounds from.",name:"howl",required:!0,type:{name:"Howl | null"}},sprite:{defaultValue:null,description:"If specified, play a sprite instead of the entire source.",name:"sprite",required:!1,type:{name:"string | undefined"}},pause:{defaultValue:{value:"false"},description:"Pause playback.",name:"pause",required:!1,type:{name:"boolean | undefined"}},volume:{defaultValue:{value:"1"},description:"Control playback volume, from 0 to 1.",name:"volume",required:!1,type:{name:"number | undefined"}},mute:{defaultValue:{value:"false"},description:"Mute playback.",name:"mute",required:!1,type:{name:"boolean | undefined"}},stop:{defaultValue:{value:"false"},description:"While true, playback will be stopped.\n\nStopping sets seek to 0 and allows Howl to garbage collect the sound.\n\nConsider setting pause to true and seek to 0 instead if you're playing many sounds at once.",name:"stop",required:!1,type:{name:"boolean | undefined"}},seek:{defaultValue:null,description:"The time to seek this sound to in seconds.\n\nThe seek only applies once per value change.",name:"seek",required:!1,type:{name:"number | undefined"}},rate:{defaultValue:{value:"1"},description:"Set the rate of playback, from 0.5 to 4.",name:"rate",required:!1,type:{name:"number | undefined"}},loop:{defaultValue:{value:"false"},description:"Whether to loop the track or sprite on play end.",name:"loop",required:!1,type:{name:"boolean | undefined"}},fade:{defaultValue:null,description:"Fade a currently playing sound between two volumes.\n\nValues are [from, to, duration].",name:"fade",required:!1,type:{name:"[number, number, number] | undefined"}},onPlay:{defaultValue:null,description:"Listen for play events.\n\nFires once when <Play /> is mounted even if the sound starts in a stopped or paused state.",name:"onPlay",required:!1,type:{name:"(() => void) | undefined"}},onPlayError:{defaultValue:null,description:"Fires when play fails and provides the error message or code.",name:"onPlayError",required:!1,type:{name:"((message: string) => void) | undefined"}},onEnd:{defaultValue:null,description:"Fires when play ends, meaning the sound reached its end, including every time a loop has finished.",name:"onEnd",required:!1,type:{name:"(() => void) | undefined"}},onPause:{defaultValue:null,description:"Fires when this sound is paused, including on <Play /> mount if `pause` or `stop` is true.",name:"onPause",required:!1,type:{name:"(() => void) | undefined"}},onStop:{defaultValue:null,description:"Fires when the sound is stopped.",name:"onStop",required:!1,type:{name:"(() => void) | undefined"}},onMute:{defaultValue:null,description:"Fires when the sound is muted or unmuted.",name:"onMute",required:!1,type:{name:"(() => void) | undefined"}},onVolume:{defaultValue:null,description:"Fires when the sound's volume is set, including on <Play /> mount if `volume` is set.",name:"onVolume",required:!1,type:{name:"(() => void) | undefined"}},onSeek:{defaultValue:null,description:"Fires when the sound is seeked.",name:"onSeek",required:!1,type:{name:"(() => void) | undefined"}},onFade:{defaultValue:null,description:"Fires when this sound's fade is complete.",name:"onFade",required:!1,type:{name:"(() => void) | undefined"}},onRate:{defaultValue:null,description:"Fires when the rate of playback for this sound is changed.",name:"onRate",required:!1,type:{name:"(() => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Play.tsx#Play"]={docgenInfo:Play.__docgenInfo,name:"Play",path:"src/Play.tsx#Play"})}catch(__react_docgen_typescript_loader_error){}},"./src/useHowl.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>useHowl});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),howler__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/howler/dist/howler.js");function useHowl(howlOptions){var src=howlOptions.src,sprite=howlOptions.sprite,format=howlOptions.format,html5=howlOptions.html5,preload=howlOptions.preload,xhr=howlOptions.xhr,_a=howlOptions.defaultVolume,defaultVolume=void 0===_a?0:_a,_b=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),howl=_b[0],setHowl=_b[1],setState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("unloaded")[1],setLocked=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0)[1],_e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),error=_e[0],setError=_e[1];if((0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var newHowl=new howler__WEBPACK_IMPORTED_MODULE_1__.Howl({autoplay:!1,format,html5,onload:function(){return setState("loaded")},onloaderror:function(id,message){return setError({id,message})},onunlock:function(){setLocked(!1)},preload,sprite,src,volume:defaultVolume,xhr});return setHowl(newHowl),function(){setHowl(null),setState("unloaded"),setLocked(!0),setError(null),newHowl&&(newHowl.off(),newHowl.stop(),newHowl.unload())}}),[JSON.stringify(src),JSON.stringify(sprite),JSON.stringify(format),html5,xhr,preload,defaultVolume]),!howl)return{howl:null,error:null,state:"unloaded",load:function(){}};var state=howl.state();return{howl,error,state,load:"unloaded"===state?function(){howl&&howl.load(),setState("loading")}:function(){}}}try{useHowl.displayName="useHowl",useHowl.__docgenInfo={description:"A hook to get a Howl instance for use with `<Play />`.\n\nRecommended when using Rehowl from a function component. If you're\nusing a class component, you'll need to use `<Rehowl />`.",displayName:"useHowl",props:{src:{defaultValue:null,description:"The sources to the track(s) to be loaded for the sound (URLs or base64 data URIs).\n\nThese should be in order of preference, howler.js will automatically load the first\none that is compatible with the current browser.\n\nIf your files have no extensions, you will need to explicitly specify the extension\nusing the `format` prop.",name:"src",required:!0,type:{name:"string | string[]"}},sprite:{defaultValue:null,description:"Define a sound sprite for the sound.\n\nThe offset and duration are defined in milliseconds.\n\nA third (optional) parameter is available to set a sprite as looping, but you can just\nset `loop` to `true` on the `<Play />` component to achieve this as well.",name:"sprite",required:!1,type:{name:"SoundSpriteDefinitions | undefined"}},format:{defaultValue:null,description:"Array of formats corresponding to the sources provided if it's not inferable from the file name.",name:"format",required:!1,type:{name:"string[] | undefined"}},html5:{defaultValue:{value:"false"},description:"Set to true to use html5 audio instead of Web Audio.\n\nThis should be used for large audio files so that you don't have\nto wait for the full file to be downloaded and decoded before playing.",name:"html5",required:!1,type:{name:"boolean | undefined"}},preload:{defaultValue:{value:"true"},description:"Set to false in order to prevent loading the file until you call the returned `load()` function.\n\nOtherwise, howler will start loading your file immediately.",name:"preload",required:!1,type:{name:"boolean | undefined"}},xhr:{defaultValue:null,description:"Whether or not to enable the withCredentials flag on XHR requests used to fetch audio files when using Web Audio API.",name:"xhr",required:!1,type:{name:"{ method?: string | undefined; headers?: Record<string, string> | undefined; withCredentials?: boolean | undefined; } | undefined"}},defaultVolume:{defaultValue:{value:"0"},description:"Default starting volume for Plays. Defaults to muted to prevent clipping of low-volume plays.\n\nSet it to your desired Play volume if you find the beginning of your plays getting clipped.",name:"defaultVolume",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/useHowl.ts#useHowl"]={docgenInfo:useHowl.__docgenInfo,name:"useHowl",path:"src/useHowl.ts#useHowl"})}catch(__react_docgen_typescript_loader_error){}},"./stories/static/audio/sound1.mp3":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/sound1.ba7707f0.mp3"}}]);