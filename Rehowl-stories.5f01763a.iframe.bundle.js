"use strict";(self.webpackChunkrehowl=self.webpackChunkrehowl||[]).push([[430],{"./stories/Rehowl.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>Rehowl_stories,playPause:()=>playPause});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2),useHowl=__webpack_require__("./src/useHowl.ts");function Rehowl(props){const{children,src,sprite,format,html5,preload,xhr}=props,{howl,error,state,load}=(0,useHowl.$)({src,sprite,format,html5,preload,xhr});return children&&howl?children({howl,error,state,load}):null}try{Rehowl.displayName="Rehowl",Rehowl.__docgenInfo={description:"Render prop access to a Howl instance for use with `<Play />`.\n\nRecommended when using Rehowl from a class component. If you're\nusing a function component, it's best to use `useHowl`.",displayName:"Rehowl",props:{children:{defaultValue:null,description:"Child component that receives render props.",name:"children",required:!0,type:{name:"(props: IUseHowlState) => Element"}},src:{defaultValue:null,description:"The sources to the track(s) to be loaded for the sound (URLs or base64 data URIs).\n\nThese should be in order of preference, howler.js will automatically load the first\none that is compatible with the current browser.\n\nIf your files have no extensions, you will need to explicitly specify the extension\nusing the `format` prop.",name:"src",required:!0,type:{name:"string | string[]"}},sprite:{defaultValue:null,description:"Define a sound sprite for the sound.\n\nThe offset and duration are defined in milliseconds.\n\nA third (optional) parameter is available to set a sprite as looping, but you can just\nset `loop` to `true` on the `<Play />` component to achieve this as well.",name:"sprite",required:!1,type:{name:"SoundSpriteDefinitions | undefined"}},format:{defaultValue:null,description:"Array of formats corresponding to the sources provided if it's not inferable from the file name.",name:"format",required:!1,type:{name:"string[] | undefined"}},html5:{defaultValue:{value:"false"},description:"Set to true to use html5 audio instead of Web Audio.\n\nThis should be used for large audio files so that you don't have\nto wait for the full file to be downloaded and decoded before playing.",name:"html5",required:!1,type:{name:"boolean | undefined"}},preload:{defaultValue:{value:"true"},description:"Set to false in order to prevent loading the file until you call the returned `load()` function.\n\nOtherwise, howler will start loading your file immediately.",name:"preload",required:!1,type:{name:"boolean | undefined"}},xhr:{defaultValue:null,description:"Whether or not to enable the withCredentials flag on XHR requests used to fetch audio files when using Web Audio API.",name:"xhr",required:!1,type:{name:"{ method?: string | undefined; headers?: Record<string, string> | undefined; withCredentials?: boolean | undefined; } | undefined"}},defaultVolume:{defaultValue:{value:"0"},description:"Default starting volume for Plays. Defaults to muted to prevent clipping of low-volume plays.\n\nSet it to your desired Play volume if you find the beginning of your plays getting clipped.",name:"defaultVolume",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Rehowl.tsx#Rehowl"]={docgenInfo:Rehowl.__docgenInfo,name:"Rehowl",path:"src/Rehowl.tsx#Rehowl"})}catch(__react_docgen_typescript_loader_error){}var Play=__webpack_require__("./src/Play.tsx"),sound1=__webpack_require__("./stories/static/audio/sound1.mp3"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const{useState}=react_namespaceObject,Rehowl_stories={title:"Components/Rehowl",component:Rehowl,tags:["autodocs"]},playPause=()=>{const[play,setPlay]=useState(!1);return(0,jsx_runtime.jsx)(Rehowl,{src:sound1,preload:!1,children:_ref=>{let{howl,state,load}=_ref;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:load,children:"Load source"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setPlay(!play),children:play?"Pause":"Play"}),(0,jsx_runtime.jsxs)("p",{children:["State: ",state]}),(0,jsx_runtime.jsx)(Play.s,{howl,pause:!play,children:_ref2=>{let{playing}=_ref2;return(0,jsx_runtime.jsxs)("p",{children:["Playing: ",playing().toString()]})}})]})}})};playPause.displayName="playPause",playPause.parameters={...playPause.parameters,docs:{...playPause.parameters?.docs,source:{originalSource:"() => {\n  const [play, setPlay] = useState(false);\n  return <Rehowl src={sound1} preload={false}>\n      {({\n      howl,\n      state,\n      load\n    }) => <>\n          <button onClick={load}>Load source</button>\n          <button onClick={() => setPlay(!play)}>{play ? 'Pause' : 'Play'}</button>\n\n          <p>State: {state}</p>\n          <Play howl={howl} pause={!play}>\n            {({\n          playing\n        }) => <p>Playing: {playing().toString()}</p>}\n          </Play>\n        </>}\n    </Rehowl>;\n}",...playPause.parameters?.docs?.source}}};const __namedExportsOrder=["playPause"]},"./src/Play.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>Play});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function Play(props){const{howl,pause,sprite,mute,volume=1,seek,fade,stop,rate,loop,children}=props,shouldPlay=!pause&&!stop,[initialized,setInitialized]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(shouldPlay),[playId,setPlayId]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[playing,setPlaying]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),[stopped,setStopped]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[unlocked,setUnlocked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[seeking,setSeeking]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),onPlay=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onPlayError=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onEnd=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onPause=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onStop=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onMute=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onVolume=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onSeek=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onFade=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),onRate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onPlay.current=props.onPlay||null}),[props.onPlay]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onPlayError.current=props.onPlayError||null}),[props.onPlayError]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onEnd.current=props.onEnd||null}),[props.onEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onPause.current=props.onPause||null}),[props.onPause]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onStop.current=props.onStop||null}),[props.onStop]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onMute.current=props.onMute||null}),[props.onMute]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onVolume.current=props.onVolume||null}),[props.onVolume]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onSeek.current=props.onSeek||null}),[props.onSeek]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onFade.current=props.onFade||null}),[props.onFade]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{onRate.current=props.onRate||null}),[props.onRate]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{initialized||shouldPlay&&setInitialized(!0)}),[initialized,shouldPlay]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!howl||!shouldPlay||!initialized)return;const currentPlayId=howl.play(sprite);return setPlayId(currentPlayId),howl.volume(volume,currentPlayId),void 0!==mute&&howl.mute(mute,currentPlayId),void 0!==rate&&howl.rate(rate,currentPlayId),howl.once("play",(id=>{id===currentPlayId&&setUnlocked(!0)})),howl.on("play",(id=>{id===currentPlayId&&onPlay.current&&onPlay.current()})),howl.on("playerror",(id=>{id===currentPlayId&&onPlayError.current&&onPlayError.current()})),howl.on("pause",(id=>{id===currentPlayId&&onPause.current&&onPause.current()})),howl.on("end",(id=>{id===currentPlayId&&onEnd.current&&onEnd.current()})),howl.on("stop",(id=>{id===currentPlayId&&onStop.current&&onStop.current()})),howl.on("mute",(id=>{id===currentPlayId&&onMute.current&&onMute.current()})),howl.on("volume",(id=>{id===currentPlayId&&onVolume.current&&onVolume.current()})),howl.on("rate",(id=>{id===currentPlayId&&onRate.current&&onRate.current()})),howl.on("seek",(id=>{id===currentPlayId&&(setSeeking(!1),onSeek.current&&onSeek.current())})),howl.on("fade",(id=>{id===currentPlayId&&onFade.current&&onFade.current()})),()=>{howl.stop(currentPlayId),setInitialized(!1),setUnlocked(!1),howl.off("play",void 0,currentPlayId),howl.off("playerror",void 0,currentPlayId),howl.off("pause",void 0,currentPlayId),howl.off("end",void 0,currentPlayId),howl.off("stop",void 0,currentPlayId),howl.off("mute",void 0,currentPlayId),howl.off("volume",void 0,currentPlayId),howl.off("rate",void 0,currentPlayId),howl.off("seek",void 0,currentPlayId),howl.off("fade",void 0,currentPlayId),setPlayId(null)}}),[initialized,howl,sprite]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&(stop?stopped||(howl.stop(playId),setStopped(!0),setPlaying(!1)):playing&&pause?(howl.pause(playId),setStopped(!1),setPlaying(!1)):playing||pause||(howl.play(playId),setStopped(!1),setPlaying(!0)))}),[howl,playId,stopped,unlocked,playing,pause,stop]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&void 0!==mute&&howl.mute(mute,playId)}),[howl,playId,unlocked,mute]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&void 0!==volume&&howl.volume(volume,playId)}),[howl,playId,unlocked,volume]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&void 0!==seek&&(setSeeking(!0),howl.seek(seek,playId))}),[howl,playId,unlocked,seek]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!howl||!playId||!unlocked)return;if(!fade)return;const[from,to,duration]=fade;howl.fade(from,to,duration,playId)}),[howl,playId,unlocked,JSON.stringify(fade)]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&void 0!==rate&&howl.rate(rate,playId)}),[howl,playId,unlocked,rate]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{howl&&playId&&unlocked&&void 0!==loop&&howl.loop(loop,playId)}),[howl,playId,unlocked,loop]),children&&howl?children({duration:()=>howl&&playId?sprite?howl.duration(playId):howl.duration():0,playing:()=>!(!howl||!playId)&&howl.playing(playId),seek:()=>{if(!howl||!playId)return 0;if(seeking&&void 0!==seek)return seek;const position=howl.seek(playId);return"number"!=typeof position?0:position},volume:()=>{if(!howl||!playId)return void 0===volume?1:volume;const currentVolume=howl.volume(playId);return"number"!=typeof currentVolume?0:currentVolume}}):null}try{Play.displayName="Play",Play.__docgenInfo={description:"Plays and controls sounds from a Howl.\n\nThe Howl instance, provided by the `howl` prop, can come from `useHowl`,\n`<Rehowl />`, or provided from your own use of howler.js\n\nYou can render **multiple `<Play />` components** for a single\nHowl instance in order to play multiple sounds or sprites at once.\n\nEvent handlers fire only for the `<Play />` that they correspond to,\nand not for every sound playing off of the Howl instance like in howler.js",displayName:"Play",props:{howl:{defaultValue:null,description:"Instance of Howl to play sounds from.",name:"howl",required:!0,type:{name:"Howl | null"}},sprite:{defaultValue:null,description:"If specified, play a sprite instead of the entire source.",name:"sprite",required:!1,type:{name:"string | undefined"}},pause:{defaultValue:{value:"false"},description:"Pause playback.",name:"pause",required:!1,type:{name:"boolean | undefined"}},volume:{defaultValue:{value:"1"},description:"Control playback volume, from 0 to 1.",name:"volume",required:!1,type:{name:"number | undefined"}},mute:{defaultValue:{value:"false"},description:"Mute playback.",name:"mute",required:!1,type:{name:"boolean | undefined"}},stop:{defaultValue:{value:"false"},description:"While true, playback will be stopped.\n\nStopping sets seek to 0 and allows Howl to garbage collect the sound.\n\nConsider setting pause to true and seek to 0 instead if you're playing many sounds at once.",name:"stop",required:!1,type:{name:"boolean | undefined"}},seek:{defaultValue:null,description:"The time to seek this sound to in seconds.\n\nThe seek only applies once per value change.",name:"seek",required:!1,type:{name:"number | undefined"}},rate:{defaultValue:{value:"1"},description:"Set the rate of playback, from 0.5 to 4.",name:"rate",required:!1,type:{name:"number | undefined"}},loop:{defaultValue:{value:"false"},description:"Whether to loop the track or sprite on play end.",name:"loop",required:!1,type:{name:"boolean | undefined"}},fade:{defaultValue:null,description:"Fade a currently playing sound between two volumes.\n\nValues are [from, to, duration].",name:"fade",required:!1,type:{name:"[number, number, number] | undefined"}},onPlay:{defaultValue:null,description:"Listen for play events.\n\nFires once when <Play /> is mounted even if the sound starts in a stopped or paused state.",name:"onPlay",required:!1,type:{name:"(() => void) | undefined"}},onPlayError:{defaultValue:null,description:"Fires when play fails and provides the error message or code.",name:"onPlayError",required:!1,type:{name:"((message: string) => void) | undefined"}},onEnd:{defaultValue:null,description:"Fires when play ends, meaning the sound reached its end, including every time a loop has finished.",name:"onEnd",required:!1,type:{name:"(() => void) | undefined"}},onPause:{defaultValue:null,description:"Fires when this sound is paused, including on <Play /> mount if `pause` or `stop` is true.",name:"onPause",required:!1,type:{name:"(() => void) | undefined"}},onStop:{defaultValue:null,description:"Fires when the sound is stopped.",name:"onStop",required:!1,type:{name:"(() => void) | undefined"}},onMute:{defaultValue:null,description:"Fires when the sound is muted or unmuted.",name:"onMute",required:!1,type:{name:"(() => void) | undefined"}},onVolume:{defaultValue:null,description:"Fires when the sound's volume is set, including on <Play /> mount if `volume` is set.",name:"onVolume",required:!1,type:{name:"(() => void) | undefined"}},onSeek:{defaultValue:null,description:"Fires when the sound is seeked.",name:"onSeek",required:!1,type:{name:"(() => void) | undefined"}},onFade:{defaultValue:null,description:"Fires when this sound's fade is complete.",name:"onFade",required:!1,type:{name:"(() => void) | undefined"}},onRate:{defaultValue:null,description:"Fires when the rate of playback for this sound is changed.",name:"onRate",required:!1,type:{name:"(() => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Play.tsx#Play"]={docgenInfo:Play.__docgenInfo,name:"Play",path:"src/Play.tsx#Play"})}catch(__react_docgen_typescript_loader_error){}},"./src/useHowl.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>useHowl});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),howler__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/howler/dist/howler.js");function useHowl(howlOptions){const{src,sprite,format,html5,preload,xhr,defaultVolume=0}=howlOptions,[howl,setHowl]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[,setState]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("unloaded"),[,setLocked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),[error,setError]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);if((0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const newHowl=new howler__WEBPACK_IMPORTED_MODULE_1__.Howl({autoplay:!1,format,html5,onload:()=>setState("loaded"),onloaderror:(id,message)=>setError({id,message}),onunlock:()=>{setLocked(!1)},preload,sprite,src,volume:defaultVolume,xhr});return setHowl(newHowl),()=>{setHowl(null),setState("unloaded"),setLocked(!0),setError(null),newHowl&&(newHowl.off(),newHowl.stop(),newHowl.unload())}}),[JSON.stringify(src),JSON.stringify(sprite),JSON.stringify(format),html5,xhr,preload,defaultVolume]),!howl)return{howl:null,error:null,state:"unloaded",load:()=>{}};const state=howl.state();return{howl,error,state,load:"unloaded"===state?()=>{howl&&howl.load(),setState("loading")}:()=>{}}}try{useHowl.displayName="useHowl",useHowl.__docgenInfo={description:"A hook to get a Howl instance for use with `<Play />`.\n\nRecommended when using Rehowl from a function component. If you're\nusing a class component, you'll need to use `<Rehowl />`.",displayName:"useHowl",props:{src:{defaultValue:null,description:"The sources to the track(s) to be loaded for the sound (URLs or base64 data URIs).\n\nThese should be in order of preference, howler.js will automatically load the first\none that is compatible with the current browser.\n\nIf your files have no extensions, you will need to explicitly specify the extension\nusing the `format` prop.",name:"src",required:!0,type:{name:"string | string[]"}},sprite:{defaultValue:null,description:"Define a sound sprite for the sound.\n\nThe offset and duration are defined in milliseconds.\n\nA third (optional) parameter is available to set a sprite as looping, but you can just\nset `loop` to `true` on the `<Play />` component to achieve this as well.",name:"sprite",required:!1,type:{name:"SoundSpriteDefinitions | undefined"}},format:{defaultValue:null,description:"Array of formats corresponding to the sources provided if it's not inferable from the file name.",name:"format",required:!1,type:{name:"string[] | undefined"}},html5:{defaultValue:{value:"false"},description:"Set to true to use html5 audio instead of Web Audio.\n\nThis should be used for large audio files so that you don't have\nto wait for the full file to be downloaded and decoded before playing.",name:"html5",required:!1,type:{name:"boolean | undefined"}},preload:{defaultValue:{value:"true"},description:"Set to false in order to prevent loading the file until you call the returned `load()` function.\n\nOtherwise, howler will start loading your file immediately.",name:"preload",required:!1,type:{name:"boolean | undefined"}},xhr:{defaultValue:null,description:"Whether or not to enable the withCredentials flag on XHR requests used to fetch audio files when using Web Audio API.",name:"xhr",required:!1,type:{name:"{ method?: string | undefined; headers?: Record<string, string> | undefined; withCredentials?: boolean | undefined; } | undefined"}},defaultVolume:{defaultValue:{value:"0"},description:"Default starting volume for Plays. Defaults to muted to prevent clipping of low-volume plays.\n\nSet it to your desired Play volume if you find the beginning of your plays getting clipped.",name:"defaultVolume",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/useHowl.ts#useHowl"]={docgenInfo:useHowl.__docgenInfo,name:"useHowl",path:"src/useHowl.ts#useHowl"})}catch(__react_docgen_typescript_loader_error){}},"./stories/static/audio/sound1.mp3":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__.p+"static/media/sound1.ba7707f0.mp3"}}]);